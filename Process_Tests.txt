Author: David Lewellyn
Document: Process_Test.txt

Purpose: This document will serve and and parameter outline for the 
application files:

*account-admin.py
*userAdmin.sh

This will ensure that the application will meet all the needed outlined in 
the project requirements. Below are the outlined targets for each part of the application, and 
the results of these test will be contained in the file Test_Results.txt

1. Testing account-admin.py

Test parameters:

a. Does the application report users that don't have password?
  * Does it automatically lock the account and report that it have been locked?
	
  Testing Method:
  - Create a user account without a password but with an expiration date
  - Run the script
  - View the status of the account in the logfile
  - Attempt to log into that account

b. Does the application report all expired account?
  * By design this script will lock any accounts that are expired or without passwords, as long as they 
    are user accounts. This process is ignored on system accounts

  Testing Method:
  - Create a user account without an expiration data but with a password
  - Run the script 
  - View the status of the account in the logfile

c. Does the application report the expiration date/time for all accounts?

  - Run the script
  - View the status of the account in the logfile

2. Testing userAdmin.sh

Test parameters:

a. Does the application allow you to lock and unlock a user account?
  
  Test Method:
  - Run the Lock option provided in the Modify Existing User menu 
  - Attempt to log into the account
  - Run the Unlock option provided in the Modify Exiting User Menu
  - Attempt to log into the account

b. Does the application allow you to change the Expiration Date on an account?

  Test Method:
  - Run the Change Expiration Date option provided in the Modify Existing User menu
  - Run the account-admin.py
  - Annotate the expiration data and compare from a previous logfile

c. Does the application allow you add a user to the system?
  - Are you allowed to specify Full Name, username, password, and expiration date
    *By design the expiration date is not set so that the user is forced to change thier password an initial login*
  
  Test Method:
  - Run the Add New User option provided in the menu
  - View the contents of the /etc/passwd and /etc/shadow files to verify creation
  - Attempt to log into account

*Extra functionality outside Scope of Work

d. Does the application allow you to remove a user account?
     
  Test Method:
  - Run the application and use the Delete User option in the main menu
  - Choose delete user non-recursive
  - Check users </hom/> directory to see if the folder associated still exists
  - View the contents of /etc/passwd and /etc/shadow for the existence of the user

  - Run the application and use the Delete User option in the main menu
  - Choose the delete user recursive mode
  - Check users </hom/> directory to see if the folder associated still exists
  - View the contents of /etc/passwd and /etc/shadow for the existence of the user




